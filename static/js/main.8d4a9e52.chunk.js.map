{"version":3,"sources":["pages/City.jsx","pages/Zipcode.jsx","pages/Home.jsx","routes.js","index.js"],"names":["City","useState","query","setQuery","results","setResults","message","setMessage","fetchCities","a","axios","get","then","res","data","catch","err","status","response","text","statusText","onSubmit","e","preventDefault","value","onChange","target","toUpperCase","type","id","style","width","margin","display","flexFlow","Card","Body","Header","map","item","index","Zipcode","fetchZipcodes","console","log","State","Lat","Long","EstimatedPopulation","TotalWages","Home","to","Routes","basename","process","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d4a9e52.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst City = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const updateQuery = (e) => {\n    setQuery(`${e.target.value.toUpperCase()}`);\n  };\n\n  const fetchCities = async () => {\n    axios\n      .get(`https://ctp-zip-api.herokuapp.com/city/${query}`)\n      .then((res) => {\n        setMessage(null);\n        setResults(res.data);\n      })\n      .catch((err) => {\n        setResults(null);\n        setMessage({\n          status: err.response.status,\n          text: err.response.statusText,\n        });\n      });\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    fetchCities();\n  };\n\n  return (\n    <>\n      <h1>City Search</h1>\n      {/* TODO: setup input */}\n      <form onSubmit={submitForm}>\n      <input value={query} onChange={updateQuery} />\n      <input type=\"submit\" value=\"search\"></input>\n      </form>\n      <br />\n\n      <div\n        id=\"city-results\"\n        style={{\n          width: \"90vw\",\n          margin: \"5vh auto\",\n          display: \"flex\",\n          flexFlow: \"column wrap\",\n        }}\n      >\n        {message == null && results == null && (\n          <Card>\n            <Card.Body>Search a City!</Card.Body>\n          </Card>\n        )}\n\n        {message != null && results == null && (\n          <Card>\n            {/* TODO: pretty format error message */}\n            <Card.Header>Something went wrong!</Card.Header>\n            <Card.Body>\n              {message.status}: {message.text}\n            </Card.Body>\n          </Card>\n        )}\n\n        {/* TODO: map over results and pretty format zipcodes */}\n        {results != null && (\n          <Card style={{ width: \"80rem\" }}>\n            <Card.Header>\n              All Zip Codes matching <b>{query}</b>:\n            </Card.Header>\n            <Card.Body>\n              {results.map((item, index) => (\n                <li key={index}>{item}</li>\n              ))}\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default City;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nconst Zipcode = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const updateQuery = (e) => {\n    setQuery(`${e.target.value}`);\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    fetchZipcodes();\n  };\n\n  const fetchZipcodes = async () => {\n    axios\n      .get(`https://ctp-zip-api.herokuapp.com/zip/${query}`)\n      .then((res) => {\n        setMessage(null);\n        setResults(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        setResults(null);\n        setMessage({\n          status: err.response.status,\n          text: err.response.statusText,\n        });\n      });\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={submitForm}\n        style={{ width: \"90vw\", margin: \"5vh auto 0 auto\" }}\n      >\n        <h1>Zipcode Search</h1>\n        {/* TODO: setup input */}\n        <input value={query} onChange={updateQuery} />\n        <input type=\"submit\" value=\"search\"></input>\n      </form>\n      <br />\n\n      <div\n        id=\"zip-results\"\n        style={{\n          width: \"90vw\",\n          margin: \"5vh auto\",\n          display: \"flex\",\n          flexFlow: \"column wrap\",\n        }}\n      >\n        {/* TODO: pretty format loading */}\n        {message == null && results == null && (\n          <Card>\n            <Card.Body>Search a Zip Code!</Card.Body>\n          </Card>\n        )}\n\n        {message != null && results == null && (\n          <Card>\n            {/* TODO: pretty format error message */}\n            <Card.Header>Something went wrong!</Card.Header>\n            <Card.Body>\n              {message.status}: {message.text}\n            </Card.Body>\n          </Card>\n        )}\n\n        {/* TODO: map over results and pretty format zipcodes */}\n        {results != null &&\n          results.map((item, index) => (\n            <Card key={index}>\n              <Card.Header>\n                {item.City}, {item.State}\n              </Card.Header>\n              <Card.Body>\n                <li>State: {item.State}</li>\n                <li>\n                  Location: ({item.Lat}, {item.Long})\n                </li>\n                <li>Population (estimated): {item.EstimatedPopulation}</li>\n                <li>Total Wages: {item.TotalWages}</li>\n              </Card.Body>\n            </Card>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Zipcode;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <>\n      <h1>Welcome to City-Zipcode Search</h1>\n      <Link to=\"/city\">\n        <button>City</button>\n      </Link>\n      <Link to=\"/zipcode\">\n        <button>Zipcode</button>\n      </Link>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport City from \"./pages/City\";\nimport Zipcode from \"./pages/Zipcode\";\nimport Home from \"./pages/Home\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/city\" exact component={City} />\n        <Route path=\"/zipcode\" exact component={Zipcode} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Routes from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}