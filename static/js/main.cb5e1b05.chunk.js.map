{"version":3,"sources":["pages/City.jsx","pages/Zipcode.jsx","pages/Home.jsx","routes.js","index.js"],"names":["City","useState","query","setQuery","results","setResults","message","setMessage","fetchCities","a","axios","get","then","res","data","catch","err","status","response","text","statusText","value","onChange","e","target","toUpperCase","onClick","id","style","width","margin","display","flexFlow","Card","Body","Header","map","item","Zipcode","fetchZipcodes","console","log","onSubmit","preventDefault","type","State","Lat","Long","EstimatedPopulation","TotalWages","Home","to","Routes","basename","process","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb5e1b05.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst City = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const updateQuery = (e) => {\n    setQuery(`${e.target.value.toUpperCase()}`);\n  };\n\n  const fetchCities = async () => {\n    axios\n      .get(`http://ctp-zip-api.herokuapp.com/city/${query}`)\n      .then((res) => {\n        setMessage(null);\n        setResults(res.data);\n      })\n      .catch((err) => {\n        setResults(null);\n        setMessage({\n          status: err.response.status,\n          text: err.response.statusText,\n        });\n      });\n  };\n\n  return (\n    <>\n      <h1>City Search</h1>\n      {/* TODO: setup input */}\n      <input value={query} onChange={updateQuery} />\n      <button onClick={fetchCities}>Search</button>\n      <br />\n\n      <div\n        id=\"city-results\"\n        style={{\n          width: \"90vw\",\n          margin: \"5vh auto\",\n          display: \"flex\",\n          flexFlow: \"column wrap\",\n        }}\n      >\n        {message == null && results == null && (\n          <Card>\n            <Card.Body>Search a City!</Card.Body>\n          </Card>\n        )}\n\n        {message != null && results == null && (\n          <Card>\n            {/* TODO: pretty format error message */}\n            <Card.Header>Something went wrong!</Card.Header>\n            <Card.Body>\n              {message.status}: {message.text}\n            </Card.Body>\n          </Card>\n        )}\n\n        {/* TODO: map over results and pretty format zipcodes */}\n        {results != null && (\n          <Card style={{ width: \"80rem\" }}>\n            <Card.Header>\n              All Zip Codes matching <b>{query}</b>:\n            </Card.Header>\n            <Card.Body>\n              {results.map((item) => (\n                <li>{item}</li>\n              ))}\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default City;\n","import React, { useState } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\n\nconst Zipcode = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  const updateQuery = e => {\n    setQuery(`${e.target.value}`);\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    fetchZipcodes();\n  }\n\n  const fetchZipcodes = async () => {\n    axios\n      .get(`http://ctp-zip-api.herokuapp.com/zip/${query}`)\n      .then(res => {\n        setMessage(null);\n        setResults(res.data);\n        console.log(res.data);\n      })\n      .catch(err => {\n        setResults(null);\n        setMessage({\n          status: err.response.status,\n          text: err.response.statusText\n        });\n      });\n  };\n\n  return (\n    <>\n      <form onSubmit={submitForm} style={{width:\"90vw\", margin: \"5vh auto 0 auto\"}}>\n        <h1>Zipcode Search</h1>\n        {/* TODO: setup input */}\n        <input value={query} onChange={updateQuery} />\n        <input type=\"submit\" value=\"Submit\"></input>\n      </form>\n      <br />\n\n      <div id=\"zip-results\" style={{width:\"90vw\", margin: \"5vh auto\", display:\"flex\", flexFlow: \"column wrap\"}}>\n      {/* TODO: pretty format loading */}\n      {message == null && results == null && (\n        <Card>\n          <Card.Body>\n            Search a Zip Code!\n          </Card.Body>\n        </Card>\n      )}\n\n      {message != null && results == null && (\n          <Card>\n          {/* TODO: pretty format error message */}\n          <Card.Header>Something went wrong!</Card.Header>\n          <Card.Body>\n          {message.status}: {message.text}\n          </Card.Body>\n        </Card>\n      )}\n\n      {/* TODO: map over results and pretty format zipcodes */}\n      {results != null && results.map(item => \n        <Card>\n          <Card.Header>{item.City}, {item.State}</Card.Header>\n          <Card.Body>\n              <li>State: {item.State}</li>\n              <li>Location: ({item.Lat}, {item.Long})</li>\n              <li>Population (estimated): {item.EstimatedPopulation}</li>\n              <li>Total Wages: {item.TotalWages}</li>\n          </Card.Body>\n        </Card>)}\n        </div>\n      </>\n  );\n};\n\nexport default Zipcode;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <>\n      <h1>Welcome to City-Zipcode Search</h1>\n      <Link to=\"/city\">\n        <button>City</button>\n      </Link>\n      <Link to=\"/zipcode\">\n        <button>Zipcode</button>\n      </Link>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport City from \"./pages/City\";\nimport Zipcode from \"./pages/Zipcode\";\nimport Home from \"./pages/Home\";\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/city\" exact component={City} />\n        <Route path=\"/zipcode\" exact component={Zipcode} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Routes from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}